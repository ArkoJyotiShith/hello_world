#include<bits/stdc++.h>
using namespace std;

void DFS(vector<vector<int>> &map,int i, int j, int m, int n){
  if(i<0 || j<0 ||i>m-1 || j>n-1||map[i][j]!=1)
    return;
  if(map[i][j] ==1){
        map[i][j] = 0;
        DFS(map, i+1,j,m,n);
        DFS(map, i-1,j,m,n);
        DFS(map, i,j+1,m,n);
        DFS(map, i,j-1,m,n);
        DFS(map, i+1,j+1,m,n);
        DFS(map, i-1,j+1,m,n);
        DFS(map, i-1,j-1,m,n);
        DFS(map, i+1,j-1,m,n);
      }  
}


int islands(vector<vector<int>> &map, int m, int n){
  int count =0;
  for(int i=0; i<m; i++){
    for(int j=0; j<n; j++){
      if(map[i][j] ==1){
        count++;
        map[i][j] = 0;
        DFS(map, i+1,j,m,n);
        DFS(map, i-1,j,m,n);
        DFS(map, i,j+1,m,n);
        DFS(map, i,j-1,m,n);
        DFS(map, i+1,j+1,m,n);
        DFS(map, i-1,j+1,m,n);
        DFS(map, i-1,j-1,m,n);
        DFS(map, i+1,j-1,m,n);
      }
    }
  }
  return count;
}

int main()
{
  int m,n;
  cin>>m>>n;
  vector<vector<int>> map(m,vector<int>(n,0));
  for(int i=0; i<m; i++){
    for(int j=0; j<n;j++){
      cin>>map[i][j];
    }
  }
  cout<< islands(map,m,n)-1;
  return 0;
}
